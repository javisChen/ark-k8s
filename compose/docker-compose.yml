version: '3'

services:
  nacos:
    image: nacos/nacos-server:v2.2.2-slim
    container_name: nacos
    env_file:
      - env/nacos-standalone-mysql.env
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9555:9555"
    restart: always
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    depends_on:
      - grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: 'true'
      GF_AUTH_ANONYMOUS_ORG_ROLE: 'Admin'
  mysql:
    image: mysql:5.7
    restart: always
    container_name: mysql
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'root'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - '3306:3306'
    expose:
      - '3306'
  rocketmq:
    image: king019/rocketmq
    container_name: rocketmq
    environment:
      JAVA_OPT_EXT: '-Xms128m -Xmx128m -Xmn64m -XX:MetaspaceSize=32m -XX:MaxMetaspaceSize=32m'
    env_file:
      - ./env/service-common.env
    ports:
      - "9876:9876"
      - "10911:10911"
    restart: always
    command:
      - /bin/sh
      - -c
      - echo 'brokerIP1=${IP}' > opt/soft/rocketmq/conf/broker.properties && /docker.sh
  rocketmq-console:
    image: apacherocketmq/rocketmq-dashboard:latest
    container_name: rocketmq-console
    ports:
      - "19876:8080"
    environment:
      JAVA_OPTS: -Drocketmq.config.namesrvAddr=rocketmq.ark-dev.svc:9876 -Drocketmq.config.isVIPChannel=false
  gateway:
    container_name: ark-center-gateway
    image: ark-center-gateway:v1
    restart: always
    ports:
      - "8082:8082"
    env_file:
      - ./env/service-common.env
    depends_on:
      - nacos
      - redis
  oss:
    container_name: ark-center-oss
    image: ark-center-oss:v1
    restart: always
    ports:
      - "8084:8084"
    env_file:
      - ./env/service-common.env
    depends_on:
      - nacos
      - redis
  iam:
    container_name: ark-center-iam
    image: ark-center-iam:v1
    restart: always
    ports:
      - "8080:8080"
    volumes:
      #      - "/Users/chenjiawei/dev/docker/ark/iam:/app/logs/iam"
      - "C:\\docker\\ark\\iam:/app/logs/iam"
    env_file:
      - ./env/service-common.env
    depends_on:
      - nacos
      - redis
  auth:
    container_name: ark-center-auth
    image: ark-center-auth:v1
    restart: always
    ports:
      - "8089:8089"
    volumes:
      #      - "/Users/chenjiawei/dev/docker/ark/iam:/app/logs/iam"
      - "C:\\docker\\ark\\auth:/app/logs/auth"
    env_file:
      - ./env/service-common.env
    depends_on:
      - nacos
      - redis
  order:
    container_name: ark-center-order
    image: ark-center-order:v1
    restart: always
    ports:
      - "8085:8085"
    env_file:
      - ./env/service-common.env
    depends_on:
      - nacos
      - redis
      - rocketmq
  eop:
    container_name: ark-center-eop
    image: ark-center-eop:v1
    restart: always
    ports:
      - "8081:8081"
    env_file:
      - ./env/service-common.env
    depends_on:
      - nacos
      - redis
  commodity:
    container_name: ark-center-commodity
    image: ark-center-commodity:v1
    restart: always
    ports:
      - "8083:8083"
    env_file:
      - ./env/service-common.env
    depends_on:
      - nacos
      - redis
    command:
      - 'tail -f logs/commodity/commodity.log'
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    env_file:
      - ./env/service-common.env
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
#      - ./redis/data:/data
    command:
      - 'redis-server'
      - '/usr/local/etc/redis/redis.conf'
  minio:
    container_name: minio
    image: minio/minio:latest
    restart: always
    ports:
      - "9000:9000"
      - "9100:9100"
    environment:
      LANG: C.UTF-8
      TZ: "Asia/Shanghai"
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123456
    volumes:
      - ./minio/data:/data
      - ./minio/config:/root/.minio
    command: server /data --console-address ":9100"

  es-01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.7
    container_name: es-01
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: always
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
  kib-01:
    image: docker.elastic.co/kibana/kibana:7.17.7
    container_name: kib-01
    volumes:
      - ./elk/kibana/config:/usr/share/kibana/config
    ports:
      - "5601:5601"
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://es-01:9200